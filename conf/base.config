// MANIFEST
// 01 2025 p.ashford@ucl.ac.uk
// https://github.com/paulashford/macsmaf_nf

manifest {
	homePage 			= 	'https://github.com/ashford-ucl/macsr_nf'
	mainScript 			= 	'macsr_nf_dev/workflows/macsr_nf_dev.nf'
	defaultBranch 		= 	'main'
	description 		= 	'MACSMAF network module functional enrichment, ranking and annotation'
	author 				= 	'Ash (p.ashford@ucl.ac.uk)'
}


// Get root directory using Nextflow's environment variable
params {
	// Verbose DEBUG info flag
	debug = true

	config_profile_name        = 	'MACSMAF macsr_nf_dev'
    config_profile_description = 	'Parameters for network module functional enrichment, ranking and annotation'

	// user dir
	user_root_dir				= 	'/Users/ash'

	// Path to general datasets (eg for ID tables)
	nf_datasets_dir				= 	"${params.user_root_dir}/data/funvar_pipeline/datasets"

	// git proj dir
    root_proj_dir				= 	"${params.user_root_dir}/git/macsmaf/macsr_nf/macsr_nf_dev"
	script_dir					= 	"${params.root_proj_dir}/script"
	nf_out_dir					=	"${params.root_proj_dir}/output"
	nf_reports_dir				=	"${params.root_proj_dir}/reports"
	nf_enrichment_dir			=	"${params.nf_out_dir}/enrichment"	

	// Archived out dir (old run resultss for ref etc)
	nf_archived_out_dir			=	"${params.nf_out_dir}/previous_versions/v1"

	// id conversion out dir (ID conversion cuttently ad-hoc and done separately from main workflow - see: macsr_nf_dev/workflows/id_conversion_ad_hoc.nf)
	id_conversion_out_dir		= 	"${params.nf_out_dir}/converted_networks/batch_conversion"

	// script refs
	sed_simplify_script			= 	"${params.script_dir}/simplify_label.sed"
	sed_split_label_script		= 	"${params.script_dir}/split_label_cutoff.sed"
	sed_pp_modules_lines_script	=	"${params.script_dir}/preproc_module_lines.sed"
	
	// Networks
	net_methods					=	[ 'M1', 'R1', 'K1' ]
	// net_methods					=	[ 'R1' ,'K1' ]
	net_dbs						= 	[  'string', 'cpdb', 'humanbase' ]
	// net_dbs						= 	[  'string', 'humanbase' ]
	net_cutoffs					=	[ '0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9' ]
	// net_cutoffs					=	[ '0.0', '0.1', '0.2' ]
	
	// // pre-process network modules first?  If true, then PREPROC_NET_MODULES is run first to gather .dat files from supplied path
	// containing Monet/DREAN ouputs for a single method type (eg M1 or R1 or K1), i.e. K1 modules for cpdb, humanbase and string using a range of network cut-off filters.
	// If false, then the network_inputs channel is expected to contain the .dat files (1 for each method) already (e.g. in {params.nf_network_modules_dir}/network_processed)
	
	// Path to the DREAM/Monet modules split by method, db and cut-off, original IDs (nextflow datasets directory, which may link to others)
	// preproc_net_modules 		= 	true
	// nf_network_modules_dir		= 	"${params.user_root_dir}/Dropbox/bioinf/MACSMAF/datasets/d024"
	
	// combined method_db module files containing all cut-offs and with standardised file / col / field naming
	preproc_net_modules 		= 	false
	// nf_network_modules_dir		= 	"${params.nf_out_dir}/compiled_module_datasets/v01/converted_networks/ensembl_gene_id"
	nf_network_modules_dir		= 	"${params.nf_out_dir}/compiled_module_datasets/v02/converted_networks/ensembl_gene_id"
	
	net_file_prefix 			= 	'network_modules_'
	// Monet modules split by db, cut-off and method
	// nf_network_modules_original_dir		= 	"${params.user_root_dir}/Dropbox/bioinf/MACSMAF/datasets/d024"
	
	//g:Profiler params
	gprofiler_sources			=	"GO:BP,KEGG,REAC"
	gprofiler_sig				=	0.01
	gprofiler_exclude_iea		=	true
	// max term size as fraction of effective domain
	max_term_size				=	0.05

	// ID mapping biomart for EnsemblIDs and gene/entrez IDs etc
	map_biomart					=	"${params.nf_datasets_dir}/biomart/biomart01/mart_export.txt"
	// ID map using HGNC table (overlaps biomart for some IDs eg entrez- use biomart primarily unless HGNC specifc)
	map_hgnc					= 	"${params.nf_datasets_dir}/hgnc/hgnc_complete_set.txt"
	// ID mapping tables for genes IDs and UniProt
	map_uniprot 				= 	"${params.nf_datasets_dir}/uniprot/HUMAN_9606_idmapping_cut_cols_with_header.tab"
	
	// Gene Ontology (GO) and GOslims
	goatools_script_path 		= 	"${params.user_root_dir}/git/bioinf/goatools/scripts"
	go_dir						= 	"${params.nf_datasets_dir}/go"
	gaf_human					=	"${params.go_dir}/gaf_human.gaf"
    go_obo_path 				= 	"${params.go_dir}/go-basic.obo"
    go_slim_obo_path 			= 	"${params.go_dir}/goslim_pir.obo"
	go_slim_min_perc_rank		=	0.25

	
	// nf_module_prefix			= "${params.nf_exper_id}_${params.nf_module_detect}_${nf_network_type}_mod_"
		

    // Test parameters
    // test_enrichment_file = '/Users/ash/git/macsmaf/macsr_nf/macsr_nf_dev/output/enrichment/K1_cpdb_0.9_enrichment_with_metrics.tsv'
}

env { 
    DEBUG = params.debug.toString()
}

// Delete work files after successful run?
// cleanup 				= 	true
cleanup 				= 	false

// Visualisation of pipeline
dag {
	enabled 			= 	true
	overwrite 			= 	true
	file 				= 	"${params.nf_reports_dir}/macsr_nf_dev/workflow-visualization.png"
}

// Generate report
report {
	enabled 			= 	true
  	overwrite 			= 	true
  	file    			= 	"${params.nf_reports_dir}/macsr_nf_dev/workflow-report.html"
}


// PROFILE OPTIONS
// manual warning "When using the profiles feature in your config file, do NOT set attributes in the same scope both inside and outside a profiles context. For example:"
profiles {

	standard {
		// env.NXF_FILE_ROOT = '/Users/ash/git/macsmaf/macsr_nf/macsr_nf_dev' - use export NXF_FILE_ROOT=... in launch env
		process.executor	= 	'local'
		docker.enabled 		= 	false
		singularity.enabled = 	false
		conda.enabled 		= 	false
	}
	
}




